<!DOCTYPE html>

<html>
<head>

<meta name="viewport"

content="width=devide-width, initial-scale=1">

<style>

<!-- base design for all pages -->

body {
	background-color: #f4f4f4;
}

#webTitle {
	color: #ff9933;
	text-align: left;
	font-size: 40px;
	font-family: Arial;
	padding: 0px 25px;
}

#pageName {
	color: #ff9933;
	text-align: center;
	font-size: 40px;
	font-family: Arial;
}

.topnav {
	overflow: hidden;
	background-color: #333;
}

.topnav a {
	float: left;
    color: white;
    text-align: center;
    padding: 14px 16px;
    font-size: 20px;
    font-family: Arial;
    text-decoration: none;
}

.topnav a:hover {
    background-color: #ffffff;
    color: #4d4d4d;
}

.topnav a.active {
    background-color: #ff9933;
}

#greeting {
    font-size: 50px;
    text-align: center;
    font-family: Arial;
    color: #ff9933;
}

#intro {
    font-size: 25px;
    padding: 65px 100px;
}

#arrayTable {
	font-family: Arial;
	border-collapse:collapse;
	width: 50%
}

#arrayTable td {
	border: 3px solid black;
	padding: 10px 10px 10px 10px;
	text-align: center;
}

</style>
</head>

<body>

<h1 id="webTitle">Sorting Algorithms</h1>

<div class="topnav">
    <a href="homepage.html">Home</a>
    <a class="active href=bubble.html">Bubble Sort</a>
    <a href="selection.html">Selection Sort</a>
    <a href="insertion.html">Insertion Sort</a>
    <a href="quick.html">Quick Sort</a>
    <a href="counting.html">Counting Sort</a>
</div>

<h1 id="pageName">Bubble Sort</h1>

<form action="userArray()">
	Your Number:<br>
	<input type="text" name="number">
	<input type="submit" value="Add">
</form>

<button type="button" onclick="success">Go!</button>
<button type="button" onclick="RandomArrayGenerator()">Randomize!</button>
<br> <br>
<table id="arrayTable">
	<tr>
		<td>1</td>
		<td>2</td>
		<td>3</td>
		<td>4</td>
		<td>5</td>
		<td>6</td>
		<td>7</td>
		<td>8</td>
		<td>9</td>
		<td>10</td>
	</tr>


<script>

class BoundedArray {
	constructor(arrayName, maxLength) {
		this.array = arrayName;
		this.arrLength = maxLength; //sets max length of array
	}
	getMaxLen() {
		return this.arrLength; //getter
	}
	setMaxLen(len) {
		this.arrLength = len; //setter, if future parties wish to increase or decrease max length
	}
	
}

//empties the entire array
function clearArray(arr) {
	arr.splice(0, arr.length);
}

//array with user input
function userArray() {
	var maxLen = 10;
	var userArr = [];
	var curEl = null;

	while(userArr.length < maxLen) {
		curEl = document.getElementById("Add").innerHTML;
		if (0<=curEl<=999) {
			//next table value = curEl
		} else {
			alert("Invalid input: Please input a number between 0 and 999.);
		} 
	}
}

//random array generator
function RandomArrayGenerator ()
{
	var RandomArray = [];
	var i;
	for (i=0; i < 10; i++)
	{
		RandomArray [i]=Math.floor(Math.random() * 1000);
	}
	return RandomArray;
}

//singleton design pattern
function singleton(array) {
	return array;
}

</script>

</body>
</html>
